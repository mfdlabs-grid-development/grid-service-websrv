/*
Avatar Api v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package avatarv1

import (
	"encoding/json"

	httpclients "github.com/mfdlabs/grid-service-websrv/http_clients"
)

// checks if the RobloxApiAvatarModelsBodyColorsModel type satisfies the MappedNullable interface at compile time
var _ httpclients.MappedNullable = &RobloxApiAvatarModelsBodyColorsModel{}

// RobloxApiAvatarModelsBodyColorsModel A model container BrickColor ids for each body part.
type RobloxApiAvatarModelsBodyColorsModel struct {
	HeadColorId *int32 `json:"headColorId,omitempty"`
	TorsoColorId *int32 `json:"torsoColorId,omitempty"`
	RightArmColorId *int32 `json:"rightArmColorId,omitempty"`
	LeftArmColorId *int32 `json:"leftArmColorId,omitempty"`
	RightLegColorId *int32 `json:"rightLegColorId,omitempty"`
	LeftLegColorId *int32 `json:"leftLegColorId,omitempty"`
}

// NewRobloxApiAvatarModelsBodyColorsModel instantiates a new RobloxApiAvatarModelsBodyColorsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRobloxApiAvatarModelsBodyColorsModel() *RobloxApiAvatarModelsBodyColorsModel {
	this := RobloxApiAvatarModelsBodyColorsModel{}
	return &this
}

// NewRobloxApiAvatarModelsBodyColorsModelWithDefaults instantiates a new RobloxApiAvatarModelsBodyColorsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRobloxApiAvatarModelsBodyColorsModelWithDefaults() *RobloxApiAvatarModelsBodyColorsModel {
	this := RobloxApiAvatarModelsBodyColorsModel{}
	return &this
}

// GetHeadColorId returns the HeadColorId field value if set, zero value otherwise.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetHeadColorId() int32 {
	if o == nil || httpclients.IsNil(o.HeadColorId) {
		var ret int32
		return ret
	}
	return *o.HeadColorId
}

// GetHeadColorIdOk returns a tuple with the HeadColorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetHeadColorIdOk() (*int32, bool) {
	if o == nil || httpclients.IsNil(o.HeadColorId) {
		return nil, false
	}
	return o.HeadColorId, true
}

// HasHeadColorId returns a boolean if a field has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) HasHeadColorId() bool {
	if o != nil && !httpclients.IsNil(o.HeadColorId) {
		return true
	}

	return false
}

// SetHeadColorId gets a reference to the given int32 and assigns it to the HeadColorId field.
func (o *RobloxApiAvatarModelsBodyColorsModel) SetHeadColorId(v int32) {
	o.HeadColorId = &v
}

// GetTorsoColorId returns the TorsoColorId field value if set, zero value otherwise.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetTorsoColorId() int32 {
	if o == nil || httpclients.IsNil(o.TorsoColorId) {
		var ret int32
		return ret
	}
	return *o.TorsoColorId
}

// GetTorsoColorIdOk returns a tuple with the TorsoColorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetTorsoColorIdOk() (*int32, bool) {
	if o == nil || httpclients.IsNil(o.TorsoColorId) {
		return nil, false
	}
	return o.TorsoColorId, true
}

// HasTorsoColorId returns a boolean if a field has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) HasTorsoColorId() bool {
	if o != nil && !httpclients.IsNil(o.TorsoColorId) {
		return true
	}

	return false
}

// SetTorsoColorId gets a reference to the given int32 and assigns it to the TorsoColorId field.
func (o *RobloxApiAvatarModelsBodyColorsModel) SetTorsoColorId(v int32) {
	o.TorsoColorId = &v
}

// GetRightArmColorId returns the RightArmColorId field value if set, zero value otherwise.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetRightArmColorId() int32 {
	if o == nil || httpclients.IsNil(o.RightArmColorId) {
		var ret int32
		return ret
	}
	return *o.RightArmColorId
}

// GetRightArmColorIdOk returns a tuple with the RightArmColorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetRightArmColorIdOk() (*int32, bool) {
	if o == nil || httpclients.IsNil(o.RightArmColorId) {
		return nil, false
	}
	return o.RightArmColorId, true
}

// HasRightArmColorId returns a boolean if a field has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) HasRightArmColorId() bool {
	if o != nil && !httpclients.IsNil(o.RightArmColorId) {
		return true
	}

	return false
}

// SetRightArmColorId gets a reference to the given int32 and assigns it to the RightArmColorId field.
func (o *RobloxApiAvatarModelsBodyColorsModel) SetRightArmColorId(v int32) {
	o.RightArmColorId = &v
}

// GetLeftArmColorId returns the LeftArmColorId field value if set, zero value otherwise.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetLeftArmColorId() int32 {
	if o == nil || httpclients.IsNil(o.LeftArmColorId) {
		var ret int32
		return ret
	}
	return *o.LeftArmColorId
}

// GetLeftArmColorIdOk returns a tuple with the LeftArmColorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetLeftArmColorIdOk() (*int32, bool) {
	if o == nil || httpclients.IsNil(o.LeftArmColorId) {
		return nil, false
	}
	return o.LeftArmColorId, true
}

// HasLeftArmColorId returns a boolean if a field has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) HasLeftArmColorId() bool {
	if o != nil && !httpclients.IsNil(o.LeftArmColorId) {
		return true
	}

	return false
}

// SetLeftArmColorId gets a reference to the given int32 and assigns it to the LeftArmColorId field.
func (o *RobloxApiAvatarModelsBodyColorsModel) SetLeftArmColorId(v int32) {
	o.LeftArmColorId = &v
}

// GetRightLegColorId returns the RightLegColorId field value if set, zero value otherwise.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetRightLegColorId() int32 {
	if o == nil || httpclients.IsNil(o.RightLegColorId) {
		var ret int32
		return ret
	}
	return *o.RightLegColorId
}

// GetRightLegColorIdOk returns a tuple with the RightLegColorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetRightLegColorIdOk() (*int32, bool) {
	if o == nil || httpclients.IsNil(o.RightLegColorId) {
		return nil, false
	}
	return o.RightLegColorId, true
}

// HasRightLegColorId returns a boolean if a field has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) HasRightLegColorId() bool {
	if o != nil && !httpclients.IsNil(o.RightLegColorId) {
		return true
	}

	return false
}

// SetRightLegColorId gets a reference to the given int32 and assigns it to the RightLegColorId field.
func (o *RobloxApiAvatarModelsBodyColorsModel) SetRightLegColorId(v int32) {
	o.RightLegColorId = &v
}

// GetLeftLegColorId returns the LeftLegColorId field value if set, zero value otherwise.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetLeftLegColorId() int32 {
	if o == nil || httpclients.IsNil(o.LeftLegColorId) {
		var ret int32
		return ret
	}
	return *o.LeftLegColorId
}

// GetLeftLegColorIdOk returns a tuple with the LeftLegColorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) GetLeftLegColorIdOk() (*int32, bool) {
	if o == nil || httpclients.IsNil(o.LeftLegColorId) {
		return nil, false
	}
	return o.LeftLegColorId, true
}

// HasLeftLegColorId returns a boolean if a field has been set.
func (o *RobloxApiAvatarModelsBodyColorsModel) HasLeftLegColorId() bool {
	if o != nil && !httpclients.IsNil(o.LeftLegColorId) {
		return true
	}

	return false
}

// SetLeftLegColorId gets a reference to the given int32 and assigns it to the LeftLegColorId field.
func (o *RobloxApiAvatarModelsBodyColorsModel) SetLeftLegColorId(v int32) {
	o.LeftLegColorId = &v
}

func (o RobloxApiAvatarModelsBodyColorsModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RobloxApiAvatarModelsBodyColorsModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !httpclients.IsNil(o.HeadColorId) {
		toSerialize["headColorId"] = o.HeadColorId
	}
	if !httpclients.IsNil(o.TorsoColorId) {
		toSerialize["torsoColorId"] = o.TorsoColorId
	}
	if !httpclients.IsNil(o.RightArmColorId) {
		toSerialize["rightArmColorId"] = o.RightArmColorId
	}
	if !httpclients.IsNil(o.LeftArmColorId) {
		toSerialize["leftArmColorId"] = o.LeftArmColorId
	}
	if !httpclients.IsNil(o.RightLegColorId) {
		toSerialize["rightLegColorId"] = o.RightLegColorId
	}
	if !httpclients.IsNil(o.LeftLegColorId) {
		toSerialize["leftLegColorId"] = o.LeftLegColorId
	}
	return toSerialize, nil
}

type NullableRobloxApiAvatarModelsBodyColorsModel struct {
	value *RobloxApiAvatarModelsBodyColorsModel
	isSet bool
}

func (v NullableRobloxApiAvatarModelsBodyColorsModel) Get() *RobloxApiAvatarModelsBodyColorsModel {
	return v.value
}

func (v *NullableRobloxApiAvatarModelsBodyColorsModel) Set(val *RobloxApiAvatarModelsBodyColorsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRobloxApiAvatarModelsBodyColorsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRobloxApiAvatarModelsBodyColorsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRobloxApiAvatarModelsBodyColorsModel(val *RobloxApiAvatarModelsBodyColorsModel) *NullableRobloxApiAvatarModelsBodyColorsModel {
	return &NullableRobloxApiAvatarModelsBodyColorsModel{value: val, isSet: true}
}

func (v NullableRobloxApiAvatarModelsBodyColorsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRobloxApiAvatarModelsBodyColorsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


