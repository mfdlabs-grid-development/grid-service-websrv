/*
Asset Delivery Api v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assetdeliveryv1

import (
	"encoding/json"

	httpclients "github.com/mfdlabs/grid-service-websrv/http_clients"
)

// checks if the RobloxWebAssetsIAssetResponseItem type satisfies the MappedNullable interface at compile time
var _ httpclients.MappedNullable = &RobloxWebAssetsIAssetResponseItem{}

// RobloxWebAssetsIAssetResponseItem struct for RobloxWebAssetsIAssetResponseItem
type RobloxWebAssetsIAssetResponseItem struct {
	Location *string `json:"Location,omitempty"`
	Errors []RobloxWebAssetsIAssetItemError `json:"Errors,omitempty"`
	RequestId *string `json:"RequestId,omitempty"`
	IsHashDynamic *bool `json:"IsHashDynamic,omitempty"`
	IsCopyrightProtected *bool `json:"IsCopyrightProtected,omitempty"`
	IsArchived *bool `json:"IsArchived,omitempty"`
}

// NewRobloxWebAssetsIAssetResponseItem instantiates a new RobloxWebAssetsIAssetResponseItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRobloxWebAssetsIAssetResponseItem() *RobloxWebAssetsIAssetResponseItem {
	this := RobloxWebAssetsIAssetResponseItem{}
	return &this
}

// NewRobloxWebAssetsIAssetResponseItemWithDefaults instantiates a new RobloxWebAssetsIAssetResponseItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRobloxWebAssetsIAssetResponseItemWithDefaults() *RobloxWebAssetsIAssetResponseItem {
	this := RobloxWebAssetsIAssetResponseItem{}
	return &this
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *RobloxWebAssetsIAssetResponseItem) GetLocation() string {
	if o == nil || httpclients.IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxWebAssetsIAssetResponseItem) GetLocationOk() (*string, bool) {
	if o == nil || httpclients.IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *RobloxWebAssetsIAssetResponseItem) HasLocation() bool {
	if o != nil && !httpclients.IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *RobloxWebAssetsIAssetResponseItem) SetLocation(v string) {
	o.Location = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *RobloxWebAssetsIAssetResponseItem) GetErrors() []RobloxWebAssetsIAssetItemError {
	if o == nil || httpclients.IsNil(o.Errors) {
		var ret []RobloxWebAssetsIAssetItemError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxWebAssetsIAssetResponseItem) GetErrorsOk() ([]RobloxWebAssetsIAssetItemError, bool) {
	if o == nil || httpclients.IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *RobloxWebAssetsIAssetResponseItem) HasErrors() bool {
	if o != nil && !httpclients.IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []RobloxWebAssetsIAssetItemError and assigns it to the Errors field.
func (o *RobloxWebAssetsIAssetResponseItem) SetErrors(v []RobloxWebAssetsIAssetItemError) {
	o.Errors = v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *RobloxWebAssetsIAssetResponseItem) GetRequestId() string {
	if o == nil || httpclients.IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxWebAssetsIAssetResponseItem) GetRequestIdOk() (*string, bool) {
	if o == nil || httpclients.IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *RobloxWebAssetsIAssetResponseItem) HasRequestId() bool {
	if o != nil && !httpclients.IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *RobloxWebAssetsIAssetResponseItem) SetRequestId(v string) {
	o.RequestId = &v
}

// GetIsHashDynamic returns the IsHashDynamic field value if set, zero value otherwise.
func (o *RobloxWebAssetsIAssetResponseItem) GetIsHashDynamic() bool {
	if o == nil || httpclients.IsNil(o.IsHashDynamic) {
		var ret bool
		return ret
	}
	return *o.IsHashDynamic
}

// GetIsHashDynamicOk returns a tuple with the IsHashDynamic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxWebAssetsIAssetResponseItem) GetIsHashDynamicOk() (*bool, bool) {
	if o == nil || httpclients.IsNil(o.IsHashDynamic) {
		return nil, false
	}
	return o.IsHashDynamic, true
}

// HasIsHashDynamic returns a boolean if a field has been set.
func (o *RobloxWebAssetsIAssetResponseItem) HasIsHashDynamic() bool {
	if o != nil && !httpclients.IsNil(o.IsHashDynamic) {
		return true
	}

	return false
}

// SetIsHashDynamic gets a reference to the given bool and assigns it to the IsHashDynamic field.
func (o *RobloxWebAssetsIAssetResponseItem) SetIsHashDynamic(v bool) {
	o.IsHashDynamic = &v
}

// GetIsCopyrightProtected returns the IsCopyrightProtected field value if set, zero value otherwise.
func (o *RobloxWebAssetsIAssetResponseItem) GetIsCopyrightProtected() bool {
	if o == nil || httpclients.IsNil(o.IsCopyrightProtected) {
		var ret bool
		return ret
	}
	return *o.IsCopyrightProtected
}

// GetIsCopyrightProtectedOk returns a tuple with the IsCopyrightProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxWebAssetsIAssetResponseItem) GetIsCopyrightProtectedOk() (*bool, bool) {
	if o == nil || httpclients.IsNil(o.IsCopyrightProtected) {
		return nil, false
	}
	return o.IsCopyrightProtected, true
}

// HasIsCopyrightProtected returns a boolean if a field has been set.
func (o *RobloxWebAssetsIAssetResponseItem) HasIsCopyrightProtected() bool {
	if o != nil && !httpclients.IsNil(o.IsCopyrightProtected) {
		return true
	}

	return false
}

// SetIsCopyrightProtected gets a reference to the given bool and assigns it to the IsCopyrightProtected field.
func (o *RobloxWebAssetsIAssetResponseItem) SetIsCopyrightProtected(v bool) {
	o.IsCopyrightProtected = &v
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise.
func (o *RobloxWebAssetsIAssetResponseItem) GetIsArchived() bool {
	if o == nil || httpclients.IsNil(o.IsArchived) {
		var ret bool
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxWebAssetsIAssetResponseItem) GetIsArchivedOk() (*bool, bool) {
	if o == nil || httpclients.IsNil(o.IsArchived) {
		return nil, false
	}
	return o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *RobloxWebAssetsIAssetResponseItem) HasIsArchived() bool {
	if o != nil && !httpclients.IsNil(o.IsArchived) {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given bool and assigns it to the IsArchived field.
func (o *RobloxWebAssetsIAssetResponseItem) SetIsArchived(v bool) {
	o.IsArchived = &v
}

func (o RobloxWebAssetsIAssetResponseItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RobloxWebAssetsIAssetResponseItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !httpclients.IsNil(o.Location) {
		toSerialize["Location"] = o.Location
	}
	if !httpclients.IsNil(o.Errors) {
		toSerialize["Errors"] = o.Errors
	}
	if !httpclients.IsNil(o.RequestId) {
		toSerialize["RequestId"] = o.RequestId
	}
	if !httpclients.IsNil(o.IsHashDynamic) {
		toSerialize["IsHashDynamic"] = o.IsHashDynamic
	}
	if !httpclients.IsNil(o.IsCopyrightProtected) {
		toSerialize["IsCopyrightProtected"] = o.IsCopyrightProtected
	}
	if !httpclients.IsNil(o.IsArchived) {
		toSerialize["IsArchived"] = o.IsArchived
	}
	return toSerialize, nil
}

type NullableRobloxWebAssetsIAssetResponseItem struct {
	value *RobloxWebAssetsIAssetResponseItem
	isSet bool
}

func (v NullableRobloxWebAssetsIAssetResponseItem) Get() *RobloxWebAssetsIAssetResponseItem {
	return v.value
}

func (v *NullableRobloxWebAssetsIAssetResponseItem) Set(val *RobloxWebAssetsIAssetResponseItem) {
	v.value = val
	v.isSet = true
}

func (v NullableRobloxWebAssetsIAssetResponseItem) IsSet() bool {
	return v.isSet
}

func (v *NullableRobloxWebAssetsIAssetResponseItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRobloxWebAssetsIAssetResponseItem(val *RobloxWebAssetsIAssetResponseItem) *NullableRobloxWebAssetsIAssetResponseItem {
	return &NullableRobloxWebAssetsIAssetResponseItem{value: val, isSet: true}
}

func (v NullableRobloxWebAssetsIAssetResponseItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRobloxWebAssetsIAssetResponseItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


