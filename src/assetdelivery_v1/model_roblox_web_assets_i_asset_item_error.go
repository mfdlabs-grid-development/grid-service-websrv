/*
Asset Delivery Api v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assetdeliveryv1

import (
	"encoding/json"

	httpclients "github.com/mfdlabs/grid-service-websrv/http_clients"
)

// checks if the RobloxWebAssetsIAssetItemError type satisfies the MappedNullable interface at compile time
var _ httpclients.MappedNullable = &RobloxWebAssetsIAssetItemError{}

// RobloxWebAssetsIAssetItemError struct for RobloxWebAssetsIAssetItemError
type RobloxWebAssetsIAssetItemError struct {
	Code *int32 `json:"Code,omitempty"`
	Message *string `json:"Message,omitempty"`
	//  ['UnknownError' = 0, 'NoPermissionToAsset' = 1, 'AssetPermissionCheckFailed' = 2, 'NotAuthorizedForAgeRecommendation' = 3, 'AgeRecommendationCheckFailed' = 4]
	CustomErrorCode *int32 `json:"CustomErrorCode,omitempty"`
}

// NewRobloxWebAssetsIAssetItemError instantiates a new RobloxWebAssetsIAssetItemError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRobloxWebAssetsIAssetItemError() *RobloxWebAssetsIAssetItemError {
	this := RobloxWebAssetsIAssetItemError{}
	return &this
}

// NewRobloxWebAssetsIAssetItemErrorWithDefaults instantiates a new RobloxWebAssetsIAssetItemError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRobloxWebAssetsIAssetItemErrorWithDefaults() *RobloxWebAssetsIAssetItemError {
	this := RobloxWebAssetsIAssetItemError{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *RobloxWebAssetsIAssetItemError) GetCode() int32 {
	if o == nil || httpclients.IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxWebAssetsIAssetItemError) GetCodeOk() (*int32, bool) {
	if o == nil || httpclients.IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *RobloxWebAssetsIAssetItemError) HasCode() bool {
	if o != nil && !httpclients.IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *RobloxWebAssetsIAssetItemError) SetCode(v int32) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *RobloxWebAssetsIAssetItemError) GetMessage() string {
	if o == nil || httpclients.IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxWebAssetsIAssetItemError) GetMessageOk() (*string, bool) {
	if o == nil || httpclients.IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *RobloxWebAssetsIAssetItemError) HasMessage() bool {
	if o != nil && !httpclients.IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *RobloxWebAssetsIAssetItemError) SetMessage(v string) {
	o.Message = &v
}

// GetCustomErrorCode returns the CustomErrorCode field value if set, zero value otherwise.
func (o *RobloxWebAssetsIAssetItemError) GetCustomErrorCode() int32 {
	if o == nil || httpclients.IsNil(o.CustomErrorCode) {
		var ret int32
		return ret
	}
	return *o.CustomErrorCode
}

// GetCustomErrorCodeOk returns a tuple with the CustomErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RobloxWebAssetsIAssetItemError) GetCustomErrorCodeOk() (*int32, bool) {
	if o == nil || httpclients.IsNil(o.CustomErrorCode) {
		return nil, false
	}
	return o.CustomErrorCode, true
}

// HasCustomErrorCode returns a boolean if a field has been set.
func (o *RobloxWebAssetsIAssetItemError) HasCustomErrorCode() bool {
	if o != nil && !httpclients.IsNil(o.CustomErrorCode) {
		return true
	}

	return false
}

// SetCustomErrorCode gets a reference to the given int32 and assigns it to the CustomErrorCode field.
func (o *RobloxWebAssetsIAssetItemError) SetCustomErrorCode(v int32) {
	o.CustomErrorCode = &v
}

func (o RobloxWebAssetsIAssetItemError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RobloxWebAssetsIAssetItemError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !httpclients.IsNil(o.Code) {
		toSerialize["Code"] = o.Code
	}
	if !httpclients.IsNil(o.Message) {
		toSerialize["Message"] = o.Message
	}
	if !httpclients.IsNil(o.CustomErrorCode) {
		toSerialize["CustomErrorCode"] = o.CustomErrorCode
	}
	return toSerialize, nil
}

type NullableRobloxWebAssetsIAssetItemError struct {
	value *RobloxWebAssetsIAssetItemError
	isSet bool
}

func (v NullableRobloxWebAssetsIAssetItemError) Get() *RobloxWebAssetsIAssetItemError {
	return v.value
}

func (v *NullableRobloxWebAssetsIAssetItemError) Set(val *RobloxWebAssetsIAssetItemError) {
	v.value = val
	v.isSet = true
}

func (v NullableRobloxWebAssetsIAssetItemError) IsSet() bool {
	return v.isSet
}

func (v *NullableRobloxWebAssetsIAssetItemError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRobloxWebAssetsIAssetItemError(val *RobloxWebAssetsIAssetItemError) *NullableRobloxWebAssetsIAssetItemError {
	return &NullableRobloxWebAssetsIAssetItemError{value: val, isSet: true}
}

func (v NullableRobloxWebAssetsIAssetItemError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRobloxWebAssetsIAssetItemError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


